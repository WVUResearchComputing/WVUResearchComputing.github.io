.. _sp-matlab:

MATLAB
======

MATLAB (matrix laboratory) is a multi-paradigm numerical computing environment and proprietary programming language developed by MathWorks. MATLAB allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages, including C, C++, C#, Java, Fortran and Python.

Loading Matlab using Environment Modules
----------------------------------------

MATLAB is accessible via environment Modules on Thorny Flat.
To check which versions are available execute::

    trcis001:~$ module avail matlab

    -------------------- /shared/modulefiles/tier1 --------------------
    matlab/2021a matlab/2022b

Load the desired version with::

    trcis001:~$ module avail matlab/2021a

or simply load the latest version executing::

    trcis001:~$ module load matlab

Notice that the commands above load matlab on the login node.
You must never use the login node for any execution that last for more than a few seconds.
Computationally demanding calculations must be executed via job submissions.
Those jobs could be Interactive via Open On-Demand, inteeractive via terminal or non-interactive jobs for large unattended executions.
In the following sections we will cover how to request jobs under these three modes.

Interactive execution using Open On-Demand
------------------------------------------

Access Open On-Demand by directing your browser to https://ondemand-tf.hpc.wvu.edu 

.. image:: /_static/Matlab-OOD-1.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 1)

Click on Applications, select Thorny Desktop and fill the form.

.. image:: /_static/Matlab-OOD-2.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 2)

.. image:: /_static/Matlab-OOD-3.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 3)

.. image:: /_static/Matlab-OOD-4.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 4)

Open a Terminal inside the Virtual Desktop, load the matlab module and execute the command `matlab` on the terminal.

.. image:: /_static/Matlab-OOD-5.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 5)

A new Matlab window will pop up and you can start executing matlab commands.

.. image:: /_static/Matlab-OOD-6.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 6)

.. image:: /_static/Matlab-OOD-7.jpg
  :width: 600
  :alt: Using Matlab with Open On-Demand (figure 6)


Interactive execution on the terminal
-------------------------------------

From the login node, request a interactive session with SLURM::

    trcis001:~$ module load sched/slurm/22.05
    trcis001:~$ srun -n 4 --pty bash
    srun: job 24328 queued and waiting for resources
    srun: job 24328 has been allocated resources
    tarcl100:~$

::

    tarcl100:~$ module load matlab
    Loading gcc version 9.3.0 : lang/gcc/9.3.0
    Loading matlab version 2022b : matlab/2022b

::

	tarcl100:~$ matlab
	MATLAB is selecting SOFTWARE OPENGL rendering.

											  < M A T L A B (R) >
									Copyright 1984-2022 The MathWorks, Inc.
							   R2022b Update 3 (9.13.0.2126072) 64-bit (glnxa64)
											   November 17, 2022

	 
	To get started, type doc.
	For product information, visit www.mathworks.com.
	 
	>> 2 + 2

	ans =

		 4



Non-interactive execution via job submission
--------------------------------------------

This simple tutorial explains how to use Matlab without launching the
graphical interface and using the submission script.

Execution Matlab scripts (.m files)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Consider this simple script that computes first and second derivatives
of a function to find extrema and inflection points of a given function.

To download the code you can execute the following command directly on the cluster::

    trcis001:~$ wget https://docs.hpc.wvu.edu/_static/derivatives.zip

Or download the file :download:`derivatives.zip <../_static/derivatives.zip>`.
And upload the file to the cluster.

You can create a directory for this, for example `MATLAB_TUT1` and uncompress
there the file `derivatives.zip`::

    trcis001:~$ mkdir MATLAB_TUT1
    trcis001:~$ cd MATLAB_TUT1
    trcis001:~$ wget https://docs.hpc.wvu.edu/_static/derivatives.zip
    trcis001:~$ unzip derivatives.zip

It will uncompress a file called `derivatives.m`.
The file contains the matlab code that we would like to execute on the cluster.

Write a submission script for SLURM. 
For this example we will use a single core on a single machine (on Thorny Flat)::
Use your prefered text editor and type the following lines::

    #!/bin/bash
    
    #SBATCH --job-name=MATLAB
    #SBATCH --output=matlab.out
    #SBATCH --partition=standby
    
    #SBATCH --time=10:00
    #SBATCH --ntasks=1
    #SBATCH --cpus-per-task=1
    #SBATCH --mem-per-cpu=5000

    module purge
    module load matlab

    cd $SLURM_SUBMIT_DIR
    matlab -nodisplay -r derivatives

Store this lines into a file called `runjob.slurm`

This submission script is telling the SLURM workload manager that we are creating a
job called "MATLAB", that will use one node (`--ntasks=1`) and one core per
node (`--cpus-per-task=1`), during 10 minutes (`--time=10:00`). 
The partition were the job is submitted is called `standby` but you can also choose other
partitions such as `comm\_mmem\_week` or `comm\_mmem\_day`. that will offer
extended periods of time.

The lines module purge and module load statistics/matlab/2014a will
prepare the environment for executing Matlab on the HPC cluster.

Finally, the script will execute the matlab script "derivatives.m"
without opening the graphical user interface (GUI). Notive that you
should execute matlab -nodisplay -r derivatives without adding the ".m".
Matlab will always search for a file called "derivatives.m"

You submit the job from the command line executing::

    trcis001:~$ module load sched/slurm/22.05 
    trcis001:~$ sbatch runjob.slurm
    987788

You should get like above the JobID, an identifier that allow you to
keep track of your execution. You can monitor the execution like this:
When in queue, ie, waiting for execution::

    trcis001:~$ squeue 987788
    Job ID                    Name             User            Time Use S Queue
    ------------------------- ---------------- --------------- -------- - ------
    987788.srih0001            MATLAB           gufranco               0 Q debug

When running::

    trcis001:~$ squeue 987788
    Job ID                    Name             User            Time Use S Queue

    ------------------------- ---------------- --------------- -------- - ------
    987788.srih0001            MATLAB           gufranco               0 R debug

When finished::

    trcis001:~$ squeue 987788

    Job ID                    Name             User            Time Use S Queue
    ------------------------- ---------------- --------------- -------- - -----
    987788.srih0001            MATLAB           gufranco        00:00:07 C debug

When the job concludes, you will get the files::

    derivatives.fig
    derivatives.m
    derivatives.png
    MATLAB.e987788
    MATLAB.o987788
    runjob.pbs``

The figures where generated and save on the same folder you submit your
job. The output of your execution is stored at MATLAB.o987788

.. figure:: /_static/derivatives.png
   :alt: derivatives.png

   derivatives.png

::

                                < M A T L A B (R) >
                      Copyright 1984-2014 The MathWorks, Inc.
                        R2014a (8.3.0.532) 64-bit (glnxa64)
                                 February 11, 2014


    To get started, type one of these: helpwin, helpdesk, or demo.
    For product information, visit www.mathworks.com.

    First Derivatives: Finding Local Minima and Maxima
    ==================================================

    f =

    (3*x^3 + 17*x^2 + 6*x + 1)/(2*x^3 - x + 3)


    ans =

    3/2


    ans =

    3/2


    ans =

    - 1/(6*(3/4 - (241^(1/2)*432^(1/2))/432)^(1/3)) - (3/4 - (241^(1/2)*432^(1/2))/432)^(1/3)


    ans =

       -1.2896

    First Derivative: Local extremum Points
    =======================================

    g =

    (9*x^2 + 34*x + 6)/(2*x^3 - x + 3) - ((6*x^2 - 1)*(3*x^3 + 17*x^2 + 6*x + 1))/(2*x^3 - x + 3)^2


    ans =

     ((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2)/(6*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/6)) + ((337491*6^(1/2)*((3*3^(1/2)*178939632355^(1/2))/9826 + 2198209/9826)^(1/2))/39304 + (2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2))/578 - 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2) - (361*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2))/289)^(1/2)/(6*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/6)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/4)) - 15/68
     ((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2)/(6*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/6)) - ((337491*6^(1/2)*((3*3^(1/2)*178939632355^(1/2))/9826 + 2198209/9826)^(1/2))/39304 + (2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2))/578 - 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2) - (361*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/2))/289)^(1/2)/(6*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/6)*((2841*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(1/3))/1156 + 9*((3^(1/2)*178939632355^(1/2))/176868 + 2198209/530604)^(2/3) + 361/289)^(1/4)) - 15/68


    ans =

        1.2860
       -0.1892

    Second Derivatives: Finding Inflection Points
    =============================================

    h =

    (18*x + 34)/(2*x^3 - x + 3) - (2*(6*x^2 - 1)*(9*x^2 + 34*x + 6))/(2*x^3 - x + 3)^2 - (12*x*(3*x^3 + 17*x^2 + 6*x + 1))/(2*x^3 - x + 3)^2 + (2*(6*x^2 - 1)^2*(3*x^3 + 17*x^2 + 6*x + 1))/(2*x^3 - x + 3)^3


    ans =

      1.8651543689917122385037075917613
     0.57871842655441748319601085860196

Using the Matlab Compiler
~~~~~~~~~~~~~~~~~~~~~~~~~

The first step is to load matlab to get access to its executables::

    trcis001:~$ module load matlab

Prepare the compilation environment with::

    trcis001:~$ mbuild -setup``
       MBUILD configured to use 'gcc' for C language compilation.``

       To choose a different language, execute one from the following:``
        mex -setup C++ -client MBUILD ``
        mex -setup FORTRAN -client MBUILD``

You cannot compile matlab scripts that uses the symbolic toolbox

https://www.mathworks.com/products/ineligible_programs.html

So we will use another script for this tutorial.

`mandelbrot.zip <Media:mandelbrot.zip>`__

Download the file :download:`mandelbrot.zip <../_static/mandelbrot.zip>`.

After uncompress the file "mandelbrot.m"::

    trcis001:~$ mcc -m mandelbrot.m

It takes a while, when finished you will get some extra files::

    trcis001:~$ ls -1
    mandelbrot
    run_mandelbrot.sh

Write a submission script for SLURM (Spruce Flat)::

    #!/bin/bash
    
    #SBATCH --job-name=MATLAB
    #SBATCH --output=matlab.out
    #SBATCH --partition=standby
    
    #SBATCH --time=10:00
    #SBATCH --ntasks=1
    #SBATCH --cpus-per-task=1
    #SBATCH --mem-per-cpu=5000

    module purge
    module load matlab

    cd $SLURM_SUBMIT_DIR
    ./run_mandelbrot.sh /shared/software/MATLAB/R2014a

After submit the job with::

    trcis001:~$ module load sched/slurm/22.05 
    trcis001:~$ sbatch runjob.slurm
    987788

You get the results on "MATLAB.o#######" with the corresponding JobID

.. figure:: /_static/mandelbrotmatlab.png
   :alt: Mandelbrot fractal generated from Matlab

   Mandelbrot fractal generated from Matlab

Summary
-------


